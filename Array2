Q1)
#include <iostream>
using namespace std;

int countGreaterThanX(int arr[], int size, int x) {
    int count = 0;
    for(int i = 0; i < size; i++) {
        if(arr[i] > x) {
            count++;
        }
    }
    return count;
}

int main() {
    int arr[] = {1, 5, 8, 10, 12};
    int size = sizeof(arr)/sizeof(arr[0]);
    int x = 6;
    cout << "Number of elements greater than " << x << " is " << countGreaterThanX(arr, size, x) << endl;
    return 0;
}




Q2)
#include <iostream>
using namespace std;

void findLargestThree(int arr[], int size) {
    int first = INT_MIN, second = INT_MIN, third = INT_MIN;
    for(int i = 0; i < size; i++) {
        if(arr[i] > first) {
            third = second;
            second = first;
            first = arr[i];
        } else if(arr[i] > second) {
            third = second;
            second = arr[i];
        } else if(arr[i] > third) {
            third = arr[i];
        }
    }
    cout << "The largest three elements are " << first << ", " << second << ", and " << third << endl;
}

int main() {
    int arr[] = {12, 13, 1, 10, 34, 1};
    int size = sizeof(arr)/sizeof(arr[0]);
    findLargestThree(arr, size);
    return 0;
}



Q3)
#include <iostream>
using namespace std;

bool isSorted(int arr[], int size) {
    for(int i = 1; i < size; i++) {
        if(arr[i] < arr[i-1]) {
            return false;
        }
    }
    return true;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    int size = sizeof(arr)/sizeof(arr[0]);
    if(isSorted(arr, size)) {
        cout << "Array is sorted." << endl;
    } else {
        cout << "Array is not sorted." << endl;
    }
    return 0;
}



Q4)
#include <iostream>
using namespace std;

int sumDifference(int arr[], int size) {
    int evenSum = 0, oddSum = 0;
    for(int i = 0; i < size; i++) {
        if(i % 2 == 0) {
            evenSum += arr[i];
        } else {
            oddSum += arr[i];
        }
    }
    return evenSum - oddSum;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr)/sizeof(arr[0]);
    cout << "Difference between sum of even indices and odd indices: " << sumDifference(arr, size) << endl;
    return 0;
}


Q5)
#include <iostream>
using namespace std;

void modifyArray(int arr[], int size) {
    for(int i = 0; i < size; i++) {
        if(i % 2 == 0) {
            arr[i] += 10;
        } else {
            arr[i] *= 2;
        }
    }
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr)/sizeof(arr[0]);
    modifyArray(arr, size);
    cout << "Modified array: ";
    for(int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    return 0;
}


Q6)
#include <iostream>
using namespace std;

int findUnique(int arr[], int size) {
    int unique = 0;
    for(int i = 0; i < size; i++) {
        unique ^= arr[i];
    }
    return unique;
}

int main() {
    int arr[] = {2, 3, 5, 4, 5, 3, 4};
    int size = sizeof(arr)/sizeof(arr[0]);
    cout << "Unique element is " << findUnique(arr, size) << endl;
    return 0;
}


Q7)
#include <iostream>
using namespace std;

bool isPalindrome(int arr[], int size) {
    for(int i = 0; i < size/2; i++) {
        if(arr[i] != arr[size-1-i]) {
            return false;
        }
    }
    return true;
}

int main() {
    int arr[] = {1, 2, 3, 2, 1};
    int size = sizeof(arr)/sizeof(arr[0]);
    if(isPalindrome(arr, size)) {
        cout << "Array is a palindrome." << endl;
    } else {
        cout << "Array is not a palindrome." << endl;
    }
    return 0;
}


Q8)
getAverage function was called incorrectly by passing balance[0] instead of balance. The corrected call is getAverage(balance, 5).
